{"version":3,"sources":["data-method.js"],"names":["$","modalTemplate","join","getCSRFToken","options","token","attr","dataMethod","url","cb","method","toUpperCase","includes","confirm","sendRequest","ajax","ajaxOptions","params","_token","data","sendAjax","form","fields","action","_method","name","input","type","value","push","createFields","append","appendTo","createForm","submit","success","cancel","title","message","theme","window","$modal","find","html","modal","on","remove","Swal","fire","text","showCancelButton","confirmButtonText","customClass","then","result","dismiss","DismissReason","disabledButton","$btn","prop","e","this","preventDefault","$submitbutton","document","link"],"mappings":"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","file":"data-method.js","sourcesContent":["/* global $, Swal */\n$(function() {\n    var modalTemplate = [\n        '<div class=\"modal fade laravel-data-method\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dataMethodModalLabel\">',\n        '<div class=\"modal-dialog modal-sm\" role=\"document\">',\n        '<div class=\"modal-content\">',\n        '<div class=\"modal-header\">',\n        '<h6 class=\"modal-title\" id=\"dataMethodModalLabel\"></h6>',\n        '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n        '</div>',\n        '<div class=\"modal-body\"></div>',\n        '<div class=\"modal-footer\">',\n        '<button type=\"button\" class=\"btn btn-default btn-cancel\" data-dismiss=\"modal\">Cancel</button>',\n        '<button type=\"button\" class=\"btn btn-primary btn-confirm\">Confirm</button>',\n        '</div>',\n        '</div>',\n        '</div>',\n        '</div>'\n    ].join('');\n\n    function getCSRFToken(options) {\n        return options.token || $('meta[name=csrf-token]').attr('content');\n    }\n\n    function handleMethod(e) {\n        e.preventDefault();\n        var link = $(this);\n\n        dataMethod(link.attr('href'), link.data());\n    }\n\n    function dataMethod(url, options, cb) {\n        var method = options.method || 'POST';\n        method = method.toUpperCase();\n        cb = cb || function() {};\n\n        // If the data-method attribute is not PUT or DELETE,\n        // then we don't know what to do. Just ignore.\n        if (!['POST', 'PUT', 'DELETE'].includes(method)) {\n            return;\n        }\n\n        // Allow user to optionally provide data-confirm=\"Are you sure?\"\n        if (options.confirm) {\n            confirm(options, function() {\n                cb(sendRequest(url, method, options));\n            });\n        } else {\n            cb(sendRequest(url, method, options));\n        }\n    }\n\n    function sendRequest(url, method, options) {\n        if (options.ajax) {\n            return sendAjax(url, method, options);\n        } else {\n            return createForm(url, method, options).submit();\n        }\n    }\n\n    function createForm(url, method, options) {\n        var form, params, fields, token;\n\n        form = $('<form>', {\n            'method': 'POST',\n            'action': url\n        });\n\n        params = options.params || {};\n        params._token = getCSRFToken(options);\n        params._method = method;\n\n        fields = createFields(params);\n\n        return form.append(fields)\n            .appendTo('body');\n    }\n\n    function sendAjax(url, method, options) {\n        var ajaxOptions = typeof options.ajax === 'object' ? options.ajax : {};\n        var params = options.params || {};\n        params._token = getCSRFToken(options);\n\n        ajaxOptions.url = url;\n        ajaxOptions.method = method;\n        ajaxOptions.data = params\n        return $.ajax(ajaxOptions);\n    }\n\n    function createFields(params) {\n        var fields = [];\n\n        for (var name in params) {\n            var input =\n                $('<input>', {\n                    'name': name,\n                    'type': 'hidden',\n                    'value': params[name]\n                });\n\n            fields.push(input);\n        }\n\n        return fields;\n    }\n\n    function confirm(options, success, cancel) {\n        var title = options.title;\n        var message = options.confirm;\n        var theme = options.theme || 'default';\n\n        if (!cancel) {\n            cancel = function() {}\n        }\n\n        switch (theme) {\n            case 'default':\n                window.confirm(message) ? success() : cancel();\n                break;\n            case 'bootstrap':\n                var $modal = $(modalTemplate);\n                $modal.find('.modal-title').html(title);\n                $modal.find('.modal-body').html(message);\n                $modal.appendTo('body');\n                $modal.modal('show');\n\n                $modal.find('.btn-confirm').on('click', function() {\n                    $modal.modal('hide');\n                    success();\n                });\n\n                $modal.find('[data-dismiss=\"modal\"]').on('click', function() {\n                    cancel();\n                });\n\n                $modal.on('hidden.bs.modal', function() {\n                    $modal.remove();\n                });\n\n                break;\n            case 'sweetalert':\n                Swal.fire({\n                    title: title,\n                    text: message,\n                    showCancelButton: true,\n                    confirmButtonText: \"Confirm\",\n                    customClass: 'laravel-data-method'\n                }).then(function(result) {\n                  if (result.value) {\n                    success();\n                  }  else if (result.dismiss === Swal.DismissReason.cancel) {\n                    cancel();\n                  }\n                });\n                break;\n        }\n    }\n\n    // Disable button on submission form\n    function disabledButton($btn) {\n        $btn.prop('disabled', 'disabled');\n    }\n\n    $('form').submit(function(e) {\n        var form = this;\n        e.preventDefault();\n\n        var $submitbutton = $(this).find('[data-disabled-submit]');\n        var confirmMessage = $submitbutton.data('confirm');\n\n        if (confirmMessage) {\n            confirm($submitbutton.data(), function() {\n                disabledButton($submitbutton);\n                form.submit();\n            });\n\n            return false;\n        } else {\n            disabledButton($submitbutton);\n        }\n\n        form.submit();\n    });\n\n    $(document).on('click', 'a[data-method]', handleMethod);\n    window.dataMethod = dataMethod;\n});\n"]}