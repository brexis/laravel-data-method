{"version":3,"sources":["data-method.js"],"names":["$","modalTemplate","join","getCSRFToken","options","token","attr","dataMethod","url","cb","method","toUpperCase","includes","confirm","success","title","message","theme","window","$modal","find","html","appendTo","modal","on","remove","swal","text","type","showCancelButton","confirmButtonText","closeOnConfirm","customClass","sendRequest","ajax","ajaxOptions","params","_token","data","form","action","_method","fields","name","input","value","push","createFields","append","submit","document","e","preventDefault","link","this"],"mappings":"AAAAA,EAAE,WACE,IAAIC,EAAgB,CAChB,kHACA,sDACA,8BACA,6BACA,+HACA,0DACA,SACA,iCACA,6BACA,gGACA,6EACA,SACA,SACA,SACA,UACFC,KAAK,IAEP,SAASC,EAAaC,GAClB,OAAOA,EAAQC,OAASL,EAAE,yBAAyBM,KAAK,WAU5D,SAASC,EAAWC,EAAKJ,EAASK,GAC9B,IAAIC,EAASN,EAAQM,QAAU,OAC/BA,EAASA,EAAOC,cAChBF,EAAKA,GAAM,aAIN,CAAC,OAAQ,MAAO,UAAUG,SAASF,KAKpCN,EAAQS,QAgEhB,SAAiBT,EAASU,GACtB,IAAIC,EAAQX,EAAQW,MAChBC,EAAUZ,EAAQS,QAGtB,OAFYT,EAAQa,OAAS,WAGzB,IAAK,UACDC,OAAOL,QAAQG,IAAYF,IAC3B,MACJ,IAAK,YACD,IAAIK,EAASnB,EAAEC,GACfkB,EAAOC,KAAK,gBAAgBC,KAAKN,GACjCI,EAAOC,KAAK,eAAeC,KAAKL,GAChCG,EAAOG,SAAS,QAChBH,EAAOI,MAAM,QAEbJ,EAAOC,KAAK,gBAAgBI,GAAG,QAAS,WACpCL,EAAOI,MAAM,QACbT,MAGJK,EAAOK,GAAG,kBAAmB,WACzBL,EAAOM,WAEX,MACJ,IAAK,aACDC,KAAK,CACGX,MAAOA,EACPY,KAAMX,EACNY,KAAM,UACNC,kBAAkB,EAClBC,kBAAmB,UACnBC,gBAAgB,EAChBC,YAAa,uBAEjB,WACIlB,OAnGZD,CAAQT,EAAS,WACbK,EAAGwB,EAAYzB,EAAKE,EAAQN,MAGhCK,EAAGwB,EAAYzB,EAAKE,EAAQN,KAIpC,SAAS6B,EAAYzB,EAAKE,EAAQN,GAC9B,OAAIA,EAAQ8B,MA0BE1B,EAzBMA,EAyBDE,EAzBMA,EA0BrByB,EAAsC,iBADf/B,EAzBMA,GA0BA8B,KAAoB9B,EAAQ8B,KAAO,GACpEE,OAAShC,EAAQgC,QAAU,GAC3BA,OAAOC,OAASlC,EAAaC,GAE7B+B,EAAY3B,IAAMA,EAClB2B,EAAYzB,OAASA,EACrByB,EAAYG,KAAOF,OACZpC,EAAEkC,KAAKC,KA3BE3B,EAJMA,EAIDE,EAJMA,EAIEN,EAJMA,EAOnCmC,EAAOvC,EAAE,SAAU,CACfU,OAAU,OACV8B,OAAUhC,KAId4B,EAAShC,EAAQgC,QAAU,IACpBC,OAASlC,EAAaC,GAC7BgC,EAAOK,QAAU/B,EAEjBgC,EAiBJ,SAAsBN,GAClB,IAAIM,EAAS,GAEb,IAAK,IAAIC,KAAQP,EAAQ,CACrB,IAAIQ,EACA5C,EAAE,UAAW,CACT2C,KAAQA,EACRf,KAAQ,SACRiB,MAAST,EAAOO,KAGxBD,EAAOI,KAAKF,GAGhB,OAAOF,EA/BEK,CAAaX,GAEfG,EAAKS,OAAON,GACdpB,SAAS,SApB8B2B,SAIhD,IAAoBzC,EAAKE,EAAQN,EACzBmC,EAAMH,EAAQM,EAkBJlC,EAAKE,EAAQN,EACvB+B,EAqERnC,EAAEkD,UAAU1B,GAAG,QAAS,iBA7HxB,SAAsB2B,GAClBA,EAAEC,iBACF,IAAIC,EAAOrD,EAAEsD,MAEb/C,EAAW8C,EAAK/C,KAAK,QAAS+C,EAAKf,UA0HvCpB,OAAOX,WAAaA","file":"data-method.js","sourcesContent":["$(function() {\n    var modalTemplate = [\n        '<div class=\"modal fade laravel-data-method\" tabindex=\"-1\" role=\"dialog\" aria-labelledby=\"dataMethodModalLabel\">',\n        '<div class=\"modal-dialog modal-sm\" role=\"document\">',\n        '<div class=\"modal-content\">',\n        '<div class=\"modal-header\">',\n        '<button type=\"button\" class=\"close\" data-dismiss=\"modal\" aria-label=\"Close\"><span aria-hidden=\"true\">&times;</span></button>',\n        '<h4 class=\"modal-title\" id=\"dataMethodModalLabel\"></h4>',\n        '</div>',\n        '<div class=\"modal-body\"></div>',\n        '<div class=\"modal-footer\">',\n        '<button type=\"button\" class=\"btn btn-default btn-cancel\" data-dismiss=\"modal\">Cancel</button>',\n        '<button type=\"button\" class=\"btn btn-primary btn-confirm\">Confirm</button>',\n        '</div>',\n        '</div>',\n        '</div>',\n        '</div>'\n    ].join('');\n\n    function getCSRFToken(options) {\n        return options.token || $('meta[name=csrf-token]').attr('content');\n    }\n\n    function handleMethod(e) {\n        e.preventDefault();\n        var link = $(this);\n\n        dataMethod(link.attr('href'), link.data());\n    }\n\n    function dataMethod(url, options, cb) {\n        var method = options.method || 'POST';\n        method = method.toUpperCase();\n        cb = cb || function() {};\n\n        // If the data-method attribute is not PUT or DELETE,\n        // then we don't know what to do. Just ignore.\n        if (!['POST', 'PUT', 'DELETE'].includes(method)) {\n            return;\n        }\n\n        // Allow user to optionally provide data-confirm=\"Are you sure?\"\n        if (options.confirm) {\n            confirm(options, function() {\n                cb(sendRequest(url, method, options));\n            });\n        } else {\n            cb(sendRequest(url, method, options));\n        }\n    }\n\n    function sendRequest(url, method, options) {\n        if (options.ajax) {\n            return sendAjax(url, method, options);\n        } else {\n            return createForm(url, method, options).submit();\n        }\n    }\n\n    function createForm(url, method, options) {\n        var form, params, fields, token;\n\n        form = $('<form>', {\n            'method': 'POST',\n            'action': url\n        });\n\n\n        params = options.params || {};\n        params._token = getCSRFToken(options);\n        params._method = method;\n\n        fields = createFields(params);\n\n        return form.append(fields)\n            .appendTo('body');\n    }\n\n    function sendAjax(url, method, options) {\n        var ajaxOptions = typeof options.ajax === 'object' ? options.ajax : {};\n        params = options.params || {};\n        params._token = getCSRFToken(options);\n\n        ajaxOptions.url = url;\n        ajaxOptions.method = method;\n        ajaxOptions.data = params\n        return $.ajax(ajaxOptions);\n    }\n\n    function createFields(params) {\n        var fields = [];\n\n        for (var name in params) {\n            var input =\n                $('<input>', {\n                    'name': name,\n                    'type': 'hidden',\n                    'value': params[name]\n                });\n\n            fields.push(input);\n        }\n\n        return fields;\n    }\n\n    function confirm(options, success) {\n        var title = options.title;\n        var message = options.confirm;\n        var theme = options.theme || 'default';\n\n        switch (theme) {\n            case 'default':\n                window.confirm(message) && success();\n                break;\n            case 'bootstrap':\n                var $modal = $(modalTemplate);\n                $modal.find('.modal-title').html(title);\n                $modal.find('.modal-body').html(message);\n                $modal.appendTo('body');\n                $modal.modal('show');\n\n                $modal.find('.btn-confirm').on('click', function() {\n                    $modal.modal('hide');\n                    success();\n                });\n\n                $modal.on('hidden.bs.modal', function() {\n                    $modal.remove();\n                });\n                break;\n            case 'sweetalert':\n                swal({\n                        title: title,\n                        text: message,\n                        type: \"warning\",\n                        showCancelButton: true,\n                        confirmButtonText: \"Confirm\",\n                        closeOnConfirm: false,\n                        customClass: 'laravel-data-method'\n                    },\n                    function() {\n                        success();\n                    });\n                break;\n        }\n    }\n\n    $(document).on('click', 'a[data-method]', handleMethod);\n    window.dataMethod = dataMethod;\n});\n"]}